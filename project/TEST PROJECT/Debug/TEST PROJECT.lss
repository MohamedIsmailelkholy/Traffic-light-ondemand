
TEST PROJECT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000061a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800060  00800060  0000061a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000061a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000064c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000688  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001491  00000000  00000000  000007c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000090f  00000000  00000000  00001c51  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ae1  00000000  00000000  00002560  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00003044  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000546  00000000  00000000  00003200  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000037f  00000000  00000000  00003746  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003ac5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 75 00 	jmp	0xea	; 0xea <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a5 36       	cpi	r26, 0x65	; 101
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <main>
  74:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <APP_init>:
extern volatile uint8_t PedistrianExist;
extern uint8_t Car_green;
extern uint8_t Car_red;
extern uint8_t Car_yellow;
void APP_init(){
	LED_init(PORT_A,CarRedled);
  7c:	62 e0       	ldi	r22, 0x02	; 2
  7e:	81 e4       	ldi	r24, 0x41	; 65
  80:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LED_init>
	LED_init(PORT_A,CarGreenled);
  84:	60 e0       	ldi	r22, 0x00	; 0
  86:	81 e4       	ldi	r24, 0x41	; 65
  88:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LED_init>
	LED_init(PORT_A,CarYellowled);
  8c:	61 e0       	ldi	r22, 0x01	; 1
  8e:	81 e4       	ldi	r24, 0x41	; 65
  90:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LED_init>
	LED_init(PORT_B,PedisterianGreenled);
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	82 e4       	ldi	r24, 0x42	; 66
  98:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LED_init>
	LED_init(PORT_B,PedisterianYellowled);
  9c:	61 e0       	ldi	r22, 0x01	; 1
  9e:	82 e4       	ldi	r24, 0x42	; 66
  a0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LED_init>
	LED_init(PORT_B,PedisterianRedled);	 
  a4:	62 e0       	ldi	r22, 0x02	; 2
  a6:	82 e4       	ldi	r24, 0x42	; 66
  a8:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LED_init>
	LED_off(PORT_A,CarGreenled);
  ac:	60 e0       	ldi	r22, 0x00	; 0
  ae:	81 e4       	ldi	r24, 0x41	; 65
  b0:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
	LED_off(PORT_A,CarYellowled) ;
  b4:	61 e0       	ldi	r22, 0x01	; 1
  b6:	81 e4       	ldi	r24, 0x41	; 65
  b8:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
	LED_off(PORT_A,CarRedled) ;
  bc:	62 e0       	ldi	r22, 0x02	; 2
  be:	81 e4       	ldi	r24, 0x41	; 65
  c0:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
	INTERRUPT_init();
  c4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <INTERRUPT_init>
	TIMER0_init();
  c8:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <TIMER0_init>
  cc:	08 95       	ret

000000ce <APP_start>:
	//BUTTON_init(PORT_C,4);
	//BUTTON_init(PORT_C,5) ;
				//	ADC_init();
}
void APP_start(){
	if (PedistrianExist==0)
  ce:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <PedistrianExist>
  d2:	81 11       	cpse	r24, r1
  d4:	03 c0       	rjmp	.+6      	; 0xdc <APP_start+0xe>
	{  
		normalMode();
  d6:	0e 94 99 01 	call	0x332	; 0x332 <normalMode>
  da:	08 95       	ret
	}
	else{  cli();
  dc:	f8 94       	cli
		pedistrianMode();
  de:	0e 94 29 02 	call	0x452	; 0x452 <pedistrianMode>
		PedistrianExist=0;
  e2:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <PedistrianExist>
		sei();
  e6:	78 94       	sei
  e8:	08 95       	ret

000000ea <__vector_1>:
		
	}
		  
}
ISR(INT0_vect){
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	8f 93       	push	r24

		PedistrianExist=1;
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <PedistrianExist>
  fc:	8f 91       	pop	r24
  fe:	0f 90       	pop	r0
 100:	0f be       	out	0x3f, r0	; 63
 102:	0f 90       	pop	r0
 104:	1f 90       	pop	r1
 106:	18 95       	reti

00000108 <DIO_init>:
		 case PORT_C:
		// *value= (PINC & (1 << bits1)) ? 1 : 0;
		 *value=(PINC&(1<<pinnumber))>>pinnumber;
		 break;
		  case PORT_D:
		  *value=(PIND&(1<<pinnumber))>>pinnumber;
 108:	82 34       	cpi	r24, 0x42	; 66
 10a:	01 f1       	breq	.+64     	; 0x14c <DIO_init+0x44>
 10c:	83 34       	cpi	r24, 0x43	; 67
 10e:	c9 f1       	breq	.+114    	; 0x182 <DIO_init+0x7a>
 110:	81 34       	cpi	r24, 0x41	; 65
 112:	09 f0       	breq	.+2      	; 0x116 <DIO_init+0xe>
 114:	50 c0       	rjmp	.+160    	; 0x1b6 <DIO_init+0xae>
 116:	41 30       	cpi	r20, 0x01	; 1
 118:	59 f4       	brne	.+22     	; 0x130 <DIO_init+0x28>
 11a:	2a b3       	in	r18, 0x1a	; 26
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_init+0x1e>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	6a 95       	dec	r22
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_init+0x1a>
 12a:	82 2b       	or	r24, r18
 12c:	8a bb       	out	0x1a, r24	; 26
 12e:	08 95       	ret
 130:	41 11       	cpse	r20, r1
 132:	41 c0       	rjmp	.+130    	; 0x1b6 <DIO_init+0xae>
 134:	2a b3       	in	r18, 0x1a	; 26
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_init+0x38>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_init+0x34>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	8a bb       	out	0x1a, r24	; 26
 14a:	08 95       	ret
 14c:	41 30       	cpi	r20, 0x01	; 1
 14e:	59 f4       	brne	.+22     	; 0x166 <DIO_init+0x5e>
 150:	27 b3       	in	r18, 0x17	; 23
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 c0       	rjmp	.+4      	; 0x15c <DIO_init+0x54>
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	6a 95       	dec	r22
 15e:	e2 f7       	brpl	.-8      	; 0x158 <DIO_init+0x50>
 160:	82 2b       	or	r24, r18
 162:	87 bb       	out	0x17, r24	; 23
 164:	08 95       	ret
 166:	41 11       	cpse	r20, r1
 168:	26 c0       	rjmp	.+76     	; 0x1b6 <DIO_init+0xae>
 16a:	27 b3       	in	r18, 0x17	; 23
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <DIO_init+0x6e>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	6a 95       	dec	r22
 178:	e2 f7       	brpl	.-8      	; 0x172 <DIO_init+0x6a>
 17a:	80 95       	com	r24
 17c:	82 23       	and	r24, r18
 17e:	87 bb       	out	0x17, r24	; 23
 180:	08 95       	ret
 182:	41 30       	cpi	r20, 0x01	; 1
 184:	59 f4       	brne	.+22     	; 0x19c <DIO_init+0x94>
 186:	24 b3       	in	r18, 0x14	; 20
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	02 c0       	rjmp	.+4      	; 0x192 <DIO_init+0x8a>
 18e:	88 0f       	add	r24, r24
 190:	99 1f       	adc	r25, r25
 192:	6a 95       	dec	r22
 194:	e2 f7       	brpl	.-8      	; 0x18e <DIO_init+0x86>
 196:	82 2b       	or	r24, r18
 198:	84 bb       	out	0x14, r24	; 20
 19a:	08 95       	ret
 19c:	41 11       	cpse	r20, r1
 19e:	0b c0       	rjmp	.+22     	; 0x1b6 <DIO_init+0xae>
 1a0:	24 b3       	in	r18, 0x14	; 20
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_init+0xa4>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	6a 95       	dec	r22
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_init+0xa0>
 1b0:	80 95       	com	r24
 1b2:	82 23       	and	r24, r18
 1b4:	84 bb       	out	0x14, r24	; 20
 1b6:	08 95       	ret

000001b8 <DIO_write>:
 1b8:	82 34       	cpi	r24, 0x42	; 66
 1ba:	01 f1       	breq	.+64     	; 0x1fc <DIO_write+0x44>
 1bc:	83 34       	cpi	r24, 0x43	; 67
 1be:	c9 f1       	breq	.+114    	; 0x232 <DIO_write+0x7a>
 1c0:	81 34       	cpi	r24, 0x41	; 65
 1c2:	09 f0       	breq	.+2      	; 0x1c6 <DIO_write+0xe>
 1c4:	50 c0       	rjmp	.+160    	; 0x266 <DIO_write+0xae>
 1c6:	41 30       	cpi	r20, 0x01	; 1
 1c8:	59 f4       	brne	.+22     	; 0x1e0 <DIO_write+0x28>
 1ca:	2b b3       	in	r18, 0x1b	; 27
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_write+0x1e>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_write+0x1a>
 1da:	82 2b       	or	r24, r18
 1dc:	8b bb       	out	0x1b, r24	; 27
 1de:	08 95       	ret
 1e0:	41 11       	cpse	r20, r1
 1e2:	41 c0       	rjmp	.+130    	; 0x266 <DIO_write+0xae>
 1e4:	2b b3       	in	r18, 0x1b	; 27
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_write+0x38>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_write+0x34>
 1f4:	80 95       	com	r24
 1f6:	82 23       	and	r24, r18
 1f8:	8b bb       	out	0x1b, r24	; 27
 1fa:	08 95       	ret
 1fc:	41 30       	cpi	r20, 0x01	; 1
 1fe:	59 f4       	brne	.+22     	; 0x216 <DIO_write+0x5e>
 200:	28 b3       	in	r18, 0x18	; 24
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_write+0x54>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_write+0x50>
 210:	82 2b       	or	r24, r18
 212:	88 bb       	out	0x18, r24	; 24
 214:	08 95       	ret
 216:	41 11       	cpse	r20, r1
 218:	26 c0       	rjmp	.+76     	; 0x266 <DIO_write+0xae>
 21a:	28 b3       	in	r18, 0x18	; 24
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 c0       	rjmp	.+4      	; 0x226 <DIO_write+0x6e>
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <DIO_write+0x6a>
 22a:	80 95       	com	r24
 22c:	82 23       	and	r24, r18
 22e:	88 bb       	out	0x18, r24	; 24
 230:	08 95       	ret
 232:	41 30       	cpi	r20, 0x01	; 1
 234:	59 f4       	brne	.+22     	; 0x24c <DIO_write+0x94>
 236:	25 b3       	in	r18, 0x15	; 21
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_write+0x8a>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_write+0x86>
 246:	82 2b       	or	r24, r18
 248:	85 bb       	out	0x15, r24	; 21
 24a:	08 95       	ret
 24c:	41 11       	cpse	r20, r1
 24e:	0b c0       	rjmp	.+22     	; 0x266 <DIO_write+0xae>
 250:	25 b3       	in	r18, 0x15	; 21
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	02 c0       	rjmp	.+4      	; 0x25c <DIO_write+0xa4>
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	6a 95       	dec	r22
 25e:	e2 f7       	brpl	.-8      	; 0x258 <DIO_write+0xa0>
 260:	80 95       	com	r24
 262:	82 23       	and	r24, r18
 264:	85 bb       	out	0x15, r24	; 21
 266:	08 95       	ret

00000268 <DIO_toggle>:
	  }
  }

void DIO_toggle(uint8_t portnumber,uint8_t pinnumber){

		 switch (portnumber){
 268:	82 34       	cpi	r24, 0x42	; 66
 26a:	79 f0       	breq	.+30     	; 0x28a <DIO_toggle+0x22>
 26c:	83 34       	cpi	r24, 0x43	; 67
 26e:	c1 f0       	breq	.+48     	; 0x2a0 <DIO_toggle+0x38>
 270:	81 34       	cpi	r24, 0x41	; 65
 272:	01 f5       	brne	.+64     	; 0x2b4 <DIO_toggle+0x4c>
			 case PORT_A:
			 PORTA^=(1<<pinnumber);
 274:	2b b3       	in	r18, 0x1b	; 27
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 c0       	rjmp	.+4      	; 0x280 <DIO_toggle+0x18>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	6a 95       	dec	r22
 282:	e2 f7       	brpl	.-8      	; 0x27c <DIO_toggle+0x14>
 284:	82 27       	eor	r24, r18
 286:	8b bb       	out	0x1b, r24	; 27
			 break;
 288:	08 95       	ret
			 case PORT_B:
			 PORTB^=(1<<pinnumber);
 28a:	28 b3       	in	r18, 0x18	; 24
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	02 c0       	rjmp	.+4      	; 0x296 <DIO_toggle+0x2e>
 292:	88 0f       	add	r24, r24
 294:	99 1f       	adc	r25, r25
 296:	6a 95       	dec	r22
 298:	e2 f7       	brpl	.-8      	; 0x292 <DIO_toggle+0x2a>
 29a:	82 27       	eor	r24, r18
 29c:	88 bb       	out	0x18, r24	; 24
			 break;
 29e:	08 95       	ret
			 case PORT_C:
			 PORTC^=(1<<pinnumber);
 2a0:	25 b3       	in	r18, 0x15	; 21
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <DIO_toggle+0x44>
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	6a 95       	dec	r22
 2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <DIO_toggle+0x40>
 2b0:	82 27       	eor	r24, r18
 2b2:	85 bb       	out	0x15, r24	; 21
 2b4:	08 95       	ret

000002b6 <main>:
int main(void)
{
	//define the direction of pin A to output
	 /*DIO_init(PORT_A,4,OUT);
	 DIO_init(PORT_A,5,OUT);*/
	 APP_init();
 2b6:	0e 94 3e 00 	call	0x7c	; 0x7c <APP_init>
    {
		//toggle the pin
		/*DIO_write(PORT_A,4,HIGH);
		DIO_write(PORT_A,5,LOW); */
		//LED_off(PORT_A,4);
		APP_start();
 2ba:	0e 94 67 00 	call	0xce	; 0xce <APP_start>
 2be:	fd cf       	rjmp	.-6      	; 0x2ba <main+0x4>

000002c0 <LED_init>:
 *  Author: MH7B
 */ 
 #include "led.h"
 
 void LED_init(uint8_t ledport,uint8_t ledpin){
	  DIO_init(ledport,ledpin,OUT);
 2c0:	41 e0       	ldi	r20, 0x01	; 1
 2c2:	0e 94 84 00 	call	0x108	; 0x108 <DIO_init>
 2c6:	08 95       	ret

000002c8 <LED_on>:
 }
 void LED_on(uint8_t ledport,uint8_t ledpin) {
	 DIO_write(ledport,ledpin,HIGH);
 2c8:	41 e0       	ldi	r20, 0x01	; 1
 2ca:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DIO_write>
 2ce:	08 95       	ret

000002d0 <LED_off>:
 }
 void LED_off(uint8_t ledport,uint8_t ledpin) {
	   DIO_write(ledport,ledpin,LOW);
 2d0:	40 e0       	ldi	r20, 0x00	; 0
 2d2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <DIO_write>
 2d6:	08 95       	ret

000002d8 <LED_toggle>:
 }	 
void LED_toggle(uint8_t ledport,uint8_t ledpin) {
	DIO_toggle(ledport,ledpin);
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 34 01 	call	0x268	; 0x268 <DIO_toggle>
 2e0:	08 95       	ret

000002e2 <INTERRUPT_init>:
 *  Author: MH7B
 */ 
#include "external interrupt.h"

  void INTERRUPT_init() {
	  SREG|=(1<<7);
 2e2:	8f b7       	in	r24, 0x3f	; 63
 2e4:	80 68       	ori	r24, 0x80	; 128
 2e6:	8f bf       	out	0x3f, r24	; 63
	  MCUCR|=(1<<1);
 2e8:	85 b7       	in	r24, 0x35	; 53
 2ea:	82 60       	ori	r24, 0x02	; 2
 2ec:	85 bf       	out	0x35, r24	; 53
	  GICR|=(1<<6);
 2ee:	8b b7       	in	r24, 0x3b	; 59
 2f0:	80 64       	ori	r24, 0x40	; 64
 2f2:	8b bf       	out	0x3b, r24	; 59
 2f4:	08 95       	ret

000002f6 <TIMER0_init>:
//function definitions
 
 void TIMER0_init(){
	
	
		TCCR0=0x00;
 2f6:	13 be       	out	0x33, r1	; 51
		TCNT0=0X00;
 2f8:	12 be       	out	0x32, r1	; 50
 2fa:	08 95       	ret

000002fc <TIMER0_start>:
	
	}
	 
 void TIMER0_start(uint8_t prescalerValue,uint8_t startValue){
	 TCNT0=startValue;
 2fc:	62 bf       	out	0x32, r22	; 50
	 TCCR0|=(1<<0)|(1<<2);
 2fe:	83 b7       	in	r24, 0x33	; 51
 300:	85 60       	ori	r24, 0x05	; 5
 302:	83 bf       	out	0x33, r24	; 51
 304:	08 95       	ret

00000306 <TIMER0_delay>:
 }
 
 void TIMER0_delay(uint8_t numberOfOverflows,uint8_t sartValue){
	 uint8_t timerOverflowCounts=0;
 306:	20 e0       	ldi	r18, 0x00	; 0
	  
	 while(timerOverflowCounts<numberOfOverflows)	{
 308:	10 c0       	rjmp	.+32     	; 0x32a <TIMER0_delay+0x24>
		  
		 while((TIFR&(1<<0))==0 && PedistrianExist==0);
 30a:	08 b6       	in	r0, 0x38	; 56
 30c:	00 fc       	sbrc	r0, 0
 30e:	04 c0       	rjmp	.+8      	; 0x318 <TIMER0_delay+0x12>
 310:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <PedistrianExist>
 314:	99 23       	and	r25, r25
 316:	c9 f3       	breq	.-14     	; 0x30a <TIMER0_delay+0x4>
		 if (PedistrianExist==1)
 318:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <PedistrianExist>
 31c:	91 30       	cpi	r25, 0x01	; 1
 31e:	41 f0       	breq	.+16     	; 0x330 <TIMER0_delay+0x2a>
		 {
			 return;
		 }
		 
		 TIFR|=(1<<0);
 320:	98 b7       	in	r25, 0x38	; 56
 322:	91 60       	ori	r25, 0x01	; 1
 324:	98 bf       	out	0x38, r25	; 56
		 TCNT0= sartValue;
 326:	62 bf       	out	0x32, r22	; 50
		 timerOverflowCounts++;
 328:	2f 5f       	subi	r18, 0xFF	; 255
 }
 
 void TIMER0_delay(uint8_t numberOfOverflows,uint8_t sartValue){
	 uint8_t timerOverflowCounts=0;
	  
	 while(timerOverflowCounts<numberOfOverflows)	{
 32a:	28 17       	cp	r18, r24
 32c:	70 f3       	brcs	.-36     	; 0x30a <TIMER0_delay+0x4>
		 
		 TIFR|=(1<<0);
		 TCNT0= sartValue;
		 timerOverflowCounts++;
	 }
	 	 TCCR0=0x00;
 32e:	13 be       	out	0x33, r1	; 51
 330:	08 95       	ret

00000332 <normalMode>:
uint8_t Car_green =0;
uint8_t Car_red =0;
uint8_t Car_yellow =0;
EN_TrafficState_t normalMode( ){
       
	   LED_on(PORT_A,CarGreenled);
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	81 e4       	ldi	r24, 0x41	; 65
 336:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
	   LED_on(PORT_B,PedisterianRedled);
 33a:	62 e0       	ldi	r22, 0x02	; 2
 33c:	82 e4       	ldi	r24, 0x42	; 66
 33e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
	   Car_green=1;
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <Car_green>
	   TIMER0_start(1,12);
 348:	6c e0       	ldi	r22, 0x0C	; 12
 34a:	70 e0       	ldi	r23, 0x00	; 0
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
	   TIMER0_delay(20,12);
 354:	6c e0       	ldi	r22, 0x0C	; 12
 356:	70 e0       	ldi	r23, 0x00	; 0
 358:	84 e1       	ldi	r24, 0x14	; 20
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
	  
	   
	    if (PedistrianExist==1)
 360:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <PedistrianExist>
 364:	81 30       	cpi	r24, 0x01	; 1
 366:	09 f4       	brne	.+2      	; 0x36a <normalMode+0x38>
 368:	6c c0       	rjmp	.+216    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
	    {
		    return Dangerous;
	    }
		
		
		LED_off(PORT_A,CarGreenled)	;
 36a:	60 e0       	ldi	r22, 0x00	; 0
 36c:	81 e4       	ldi	r24, 0x41	; 65
 36e:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
	   Car_green=0;
 372:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <Car_green>
	   LED_toggle(PORT_A,CarYellowled);
 376:	61 e0       	ldi	r22, 0x01	; 1
 378:	81 e4       	ldi	r24, 0x41	; 65
 37a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LED_toggle>
	   //LED_toggle(PORT_B,PedisterianYellowled);
	   Car_yellow=1;
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	   TIMER0_start(1,12);
 384:	6c e0       	ldi	r22, 0x0C	; 12
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
	   TIMER0_delay(20,12);
 390:	6c e0       	ldi	r22, 0x0C	; 12
 392:	70 e0       	ldi	r23, 0x00	; 0
 394:	84 e1       	ldi	r24, 0x14	; 20
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
	   
	    if (PedistrianExist==1)
 39c:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <PedistrianExist>
 3a0:	81 30       	cpi	r24, 0x01	; 1
 3a2:	09 f4       	brne	.+2      	; 0x3a6 <normalMode+0x74>
 3a4:	50 c0       	rjmp	.+160    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
	    {
		    return BeReady;
	    }
	   Car_yellow=0;
 3a6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
	  LED_off(PORT_A,CarYellowled)  ;
 3aa:	61 e0       	ldi	r22, 0x01	; 1
 3ac:	81 e4       	ldi	r24, 0x41	; 65
 3ae:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
	LED_off(PORT_B,PedisterianRedled);
 3b2:	62 e0       	ldi	r22, 0x02	; 2
 3b4:	82 e4       	ldi	r24, 0x42	; 66
 3b6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
	 // LED_off(PORT_B,PedisterianYellowled);
	   	  // LED_off(PORT_A,CarGreenled) ;
	  LED_on(PORT_A,CarRedled);
 3ba:	62 e0       	ldi	r22, 0x02	; 2
 3bc:	81 e4       	ldi	r24, 0x41	; 65
 3be:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
	 LED_on(PORT_B,PedisterianGreenled);
 3c2:	60 e0       	ldi	r22, 0x00	; 0
 3c4:	82 e4       	ldi	r24, 0x42	; 66
 3c6:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
	   Car_red=1;
 3ca:	81 e0       	ldi	r24, 0x01	; 1
 3cc:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <Car_red>
	   TIMER0_start(1,12);
 3d0:	6c e0       	ldi	r22, 0x0C	; 12
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
	   TIMER0_delay(20,12);
 3dc:	6c e0       	ldi	r22, 0x0C	; 12
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	84 e1       	ldi	r24, 0x14	; 20
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
	   	  if (PedistrianExist==1)
 3e8:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <PedistrianExist>
 3ec:	81 30       	cpi	r24, 0x01	; 1
 3ee:	69 f1       	breq	.+90     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
	   	  {
		   	  return Dangerous;
	   	  }
	   LED_off(PORT_A,CarRedled) ;
 3f0:	62 e0       	ldi	r22, 0x02	; 2
 3f2:	81 e4       	ldi	r24, 0x41	; 65
 3f4:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
	   Car_red=0;
 3f8:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <Car_red>
	   
	   LED_toggle(PORT_A,CarYellowled);
 3fc:	61 e0       	ldi	r22, 0x01	; 1
 3fe:	81 e4       	ldi	r24, 0x41	; 65
 400:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LED_toggle>
	   //LED_toggle(PORT_B,PedisterianYellowled);
	   Car_yellow=1;
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	   TIMER0_start(1,12);
 40a:	6c e0       	ldi	r22, 0x0C	; 12
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
	   TIMER0_delay(20,12);
 416:	6c e0       	ldi	r22, 0x0C	; 12
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	84 e1       	ldi	r24, 0x14	; 20
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
	  
	    if (PedistrianExist==1)
 422:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <PedistrianExist>
 426:	81 30       	cpi	r24, 0x01	; 1
 428:	91 f0       	breq	.+36     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
	    {
		    return BeReady;
	    }
		 LED_off(PORT_A,CarYellowled)  ;
 42a:	61 e0       	ldi	r22, 0x01	; 1
 42c:	81 e4       	ldi	r24, 0x41	; 65
 42e:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		 //LED_off(PORT_B,PedisterianYellowled);
		LED_off(PORT_B,PedisterianGreenled);
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	82 e4       	ldi	r24, 0x42	; 66
 436:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
	   Car_yellow=0;
 43a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
	   return Dangerous;
 43e:	82 e0       	ldi	r24, 0x02	; 2
 440:	08 95       	ret
	   TIMER0_delay(20,12);
	  
	   
	    if (PedistrianExist==1)
	    {
		    return Dangerous;
 442:	82 e0       	ldi	r24, 0x02	; 2
 444:	08 95       	ret
	   TIMER0_start(1,12);
	   TIMER0_delay(20,12);
	   
	    if (PedistrianExist==1)
	    {
		    return BeReady;
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	08 95       	ret
	   Car_red=1;
	   TIMER0_start(1,12);
	   TIMER0_delay(20,12);
	   	  if (PedistrianExist==1)
	   	  {
		   	  return Dangerous;
 44a:	82 e0       	ldi	r24, 0x02	; 2
 44c:	08 95       	ret
	   TIMER0_start(1,12);
	   TIMER0_delay(20,12);
	  
	    if (PedistrianExist==1)
	    {
		    return BeReady;
 44e:	81 e0       	ldi	r24, 0x01	; 1
		 LED_off(PORT_A,CarYellowled)  ;
		 //LED_off(PORT_B,PedisterianYellowled);
		LED_off(PORT_B,PedisterianGreenled);
	   Car_yellow=0;
	   return Dangerous;
}
 450:	08 95       	ret

00000452 <pedistrianMode>:
EN_TrafficState_t pedistrianMode(){
	if (Car_red==1){
 452:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <Car_red>
 456:	81 30       	cpi	r24, 0x01	; 1
 458:	b9 f4       	brne	.+46     	; 0x488 <pedistrianMode+0x36>
		LED_off(PORT_B,PedisterianRedled);
 45a:	62 e0       	ldi	r22, 0x02	; 2
 45c:	82 e4       	ldi	r24, 0x42	; 66
 45e:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		LED_on(PORT_B,PedisterianGreenled);
 462:	60 e0       	ldi	r22, 0x00	; 0
 464:	82 e4       	ldi	r24, 0x42	; 66
 466:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
		PedistrianExist=0;
 46a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <PedistrianExist>
		TIMER0_start(1,12);
 46e:	6c e0       	ldi	r22, 0x0C	; 12
 470:	70 e0       	ldi	r23, 0x00	; 0
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
		TIMER0_delay(20,12);
 47a:	6c e0       	ldi	r22, 0x0C	; 12
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	84 e1       	ldi	r24, 0x14	; 20
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
 486:	57 c0       	rjmp	.+174    	; 0x536 <pedistrianMode+0xe4>
		
	
	}
	else if(Car_green==1||Car_yellow==1){
 488:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <Car_green>
 48c:	81 30       	cpi	r24, 0x01	; 1
 48e:	29 f0       	breq	.+10     	; 0x49a <pedistrianMode+0x48>
 490:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 494:	81 30       	cpi	r24, 0x01	; 1
 496:	09 f0       	breq	.+2      	; 0x49a <pedistrianMode+0x48>
 498:	4e c0       	rjmp	.+156    	; 0x536 <pedistrianMode+0xe4>
		PedistrianExist=0;
 49a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <PedistrianExist>
		LED_on(PORT_B,PedisterianRedled);
 49e:	62 e0       	ldi	r22, 0x02	; 2
 4a0:	82 e4       	ldi	r24, 0x42	; 66
 4a2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
		TIMER0_start(1,12);
 4a6:	6c e0       	ldi	r22, 0x0C	; 12
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
		TIMER0_delay(20,12);
 4b2:	6c e0       	ldi	r22, 0x0C	; 12
 4b4:	70 e0       	ldi	r23, 0x00	; 0
 4b6:	84 e1       	ldi	r24, 0x14	; 20
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
		LED_off(PORT_A,CarGreenled);
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	81 e4       	ldi	r24, 0x41	; 65
 4c2:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		LED_off(PORT_A,CarYellowled);
 4c6:	61 e0       	ldi	r22, 0x01	; 1
 4c8:	81 e4       	ldi	r24, 0x41	; 65
 4ca:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		LED_toggle(PORT_B,PedisterianYellowled);
 4ce:	61 e0       	ldi	r22, 0x01	; 1
 4d0:	82 e4       	ldi	r24, 0x42	; 66
 4d2:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LED_toggle>
		LED_toggle(PORT_A,CarYellowled);
 4d6:	61 e0       	ldi	r22, 0x01	; 1
 4d8:	81 e4       	ldi	r24, 0x41	; 65
 4da:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LED_toggle>
		 TIMER0_start(1,12);
 4de:	6c e0       	ldi	r22, 0x0C	; 12
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
		 TIMER0_delay(20,12);
 4ea:	6c e0       	ldi	r22, 0x0C	; 12
 4ec:	70 e0       	ldi	r23, 0x00	; 0
 4ee:	84 e1       	ldi	r24, 0x14	; 20
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
		 LED_off(PORT_B,PedisterianRedled)	;
 4f6:	62 e0       	ldi	r22, 0x02	; 2
 4f8:	82 e4       	ldi	r24, 0x42	; 66
 4fa:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		 LED_off(PORT_A,CarYellowled)  ;
 4fe:	61 e0       	ldi	r22, 0x01	; 1
 500:	81 e4       	ldi	r24, 0x41	; 65
 502:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		 LED_off(PORT_B,PedisterianYellowled)  ;
 506:	61 e0       	ldi	r22, 0x01	; 1
 508:	82 e4       	ldi	r24, 0x42	; 66
 50a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		 LED_on(PORT_B,PedisterianGreenled);
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	82 e4       	ldi	r24, 0x42	; 66
 512:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
		 LED_on(PORT_A,CarRedled);
 516:	62 e0       	ldi	r22, 0x02	; 2
 518:	81 e4       	ldi	r24, 0x41	; 65
 51a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
		  TIMER0_start(1,12);
 51e:	6c e0       	ldi	r22, 0x0C	; 12
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
		  TIMER0_delay(20,12);
 52a:	6c e0       	ldi	r22, 0x0C	; 12
 52c:	70 e0       	ldi	r23, 0x00	; 0
 52e:	84 e1       	ldi	r24, 0x14	; 20
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
		  }
		  LED_off(PORT_A,CarRedled) ;
 536:	62 e0       	ldi	r22, 0x02	; 2
 538:	81 e4       	ldi	r24, 0x41	; 65
 53a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		  LED_off(PORT_A,CarYellowled)  ;
 53e:	61 e0       	ldi	r22, 0x01	; 1
 540:	81 e4       	ldi	r24, 0x41	; 65
 542:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		  LED_off(PORT_B,PedisterianYellowled)  ;
 546:	61 e0       	ldi	r22, 0x01	; 1
 548:	82 e4       	ldi	r24, 0x42	; 66
 54a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		  LED_toggle(PORT_B,PedisterianYellowled);
 54e:	61 e0       	ldi	r22, 0x01	; 1
 550:	82 e4       	ldi	r24, 0x42	; 66
 552:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LED_toggle>
		  LED_toggle(PORT_A,CarYellowled);
 556:	61 e0       	ldi	r22, 0x01	; 1
 558:	81 e4       	ldi	r24, 0x41	; 65
 55a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LED_toggle>
		  TIMER0_start(1,12);
 55e:	6c e0       	ldi	r22, 0x0C	; 12
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	0e 94 7e 01 	call	0x2fc	; 0x2fc <TIMER0_start>
		  TIMER0_delay(20,12);
 56a:	6c e0       	ldi	r22, 0x0C	; 12
 56c:	70 e0       	ldi	r23, 0x00	; 0
 56e:	84 e1       	ldi	r24, 0x14	; 20
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 94 83 01 	call	0x306	; 0x306 <TIMER0_delay>
		  LED_off(PORT_B,PedisterianGreenled);
 576:	60 e0       	ldi	r22, 0x00	; 0
 578:	82 e4       	ldi	r24, 0x42	; 66
 57a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		  LED_off(PORT_A,CarYellowled)  ;
 57e:	61 e0       	ldi	r22, 0x01	; 1
 580:	81 e4       	ldi	r24, 0x41	; 65
 582:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		  LED_off(PORT_B,PedisterianYellowled)  ;
 586:	61 e0       	ldi	r22, 0x01	; 1
 588:	82 e4       	ldi	r24, 0x42	; 66
 58a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LED_off>
		  LED_on(PORT_A,CarGreenled);
 58e:	60 e0       	ldi	r22, 0x00	; 0
 590:	81 e4       	ldi	r24, 0x41	; 65
 592:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
		  LED_on(PORT_B,PedisterianRedled);
 596:	62 e0       	ldi	r22, 0x02	; 2
 598:	82 e4       	ldi	r24, 0x42	; 66
 59a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LED_on>
		  return PassedSucessfully;

	}
 59e:	83 e0       	ldi	r24, 0x03	; 3
 5a0:	08 95       	ret

000005a2 <_exit>:
 5a2:	f8 94       	cli

000005a4 <__stop_program>:
 5a4:	ff cf       	rjmp	.-2      	; 0x5a4 <__stop_program>
